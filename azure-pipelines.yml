trigger:
- none
 
pool:
  vmImage: 'windows-latest'
 
variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/Tailspin.SpaceGame.Web.sln'
  project: '**/Tailspin.SpaceGame.Web.csproj'
  testSolution: '**/Tailspin.SpaceGame.Web.UITests.sln'
  testProject: '**/Tailspin.SpaceGame.Web.UITests.csproj'
 
stages:
- stage: Build
  displayName: 'Build the web application'
  jobs:
  - job: Dependencies
    displayName: 'Install the required dependencies'
  
    steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore                  ## The dotnet command to run. Options: build, push, pack, restore, run, test, and custom.
        projects: '$(project)'            ## Path to your csproj file
        includeNuGetOrg: true  

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '$(project)' 

    - task: DotNetCoreCLI@2
      displayName: 'Run the build tests'
      inputs:
        command: 'test'
        projects: '$(testProject)'

- stage: Publish
  dependsOn: Build
  displayName: 'Publish the build artifact'
  jobs:
  - job: DotNetPublish
    steps:
    - task: DotNetCoreCLI@2
      name: 'Publish'
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(project)'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
 
    - task: PublishBuildArtifacts@1
      name: 'PublishBuildArtifacts'
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'AzureTestProject'
        publishLocation: 'Container'