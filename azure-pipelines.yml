trigger:
- none
 
pool:
  vmImage: 'windows-latest'
 
variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  solution: '**/Tailspin.SpaceGame.Web.sln'
  project: '**/Tailspin.SpaceGame.Web.csproj'
  testSolution: '**/Tailspin.SpaceGame.Web.UITests.sln'
  testProject: '**/Tailspin.SpaceGame.Web.UITests.csproj'
 
stages:
- stage: Build
  displayName: 'Build the web application'
  jobs:
  - job: Dependencies
    displayName: 'Install the required dependencies'
  
    steps:
    - task: NuGetToolInstaller@1
      name: 'NuGetToolInstaller'
      displayName: 'NuGet tool installer'
 
    - task: NuGetCommand@2
      name: 'NuGetRestore'
      displayName: 'NuGet restore packages'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '$(project)'

- stage: Test
  dependsOn: Build
  displayName: 'Build and run the test project'
  jobs:
  - job: TestDependencies
    steps:
    - task: NuGetToolInstaller@1
      name: 'NuGetToolInstaller'
      displayName: 'NuGet tool installer'
 
    - task: NuGetCommand@2
      name: 'NuGetRestore'
      displayName: 'NuGet restore packages'
      inputs:
        command: 'restore'
        restoreSolution: '$(testSolution)'
        feedsToUse: 'select'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '$(testProject)'

    - task: DotNetCoreCLI@2
      name: 'Tests'
      displayName: 'Run the build tests'
      inputs:
        command: 'test'
        projects: '$(testSolution)'
        arguments: '--configuration $(BuildConfiguration)'

- stage: Publish
  dependsOn: Test
  displayName: 'Publish the build artifact'
  jobs:
  - job: DotNetPublish
    steps:
    - task: DotNetCoreCLI@2
      name: 'Publish'
      displayName: 'Publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(project)'
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
 
    - task: PublishBuildArtifacts@1
      name: 'PublishBuildArtifacts'
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'AzureTestProject'
        publishLocation: 'Container'